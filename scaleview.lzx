<class name="scaleview">
  <view stretches="both">
    <drawview id="dv">
      <method name="setRealBackground" args="color">
	parent.parent.setAttribute('bgcolor', color);
      </method>
      
      <method name="reset">
        clear();
        this.fillStyle = 0;
	this.globalAlpha = 1;
        this.xmin = this.ymin = Infinity;
        this.xmax = this.ymax = -Infinity;
        this.inPath = false;
      </method>
      
      <method name="setBounds" args="xmin, ymin, xmax, ymax"><![CDATA[
        if (xmin == this.xmin && ymin == this.ymin &&
            xmax == this.xmax && ymax == this.ymax) return;
        //Debug.write('bounds', xmin, ymin, xmax, ymax);
        this.xmin = xmin; this.ymin = ymin;
        this.xmax = xmax; this.ymax = ymax;
        var max = Math.max(xmax-xmin, ymax-ymin);
        //max = xmax-xmin;
        //Debug.write(xmin, xmax, max);
        parent.setAttribute('unstretchedwidth', max);
        parent.setAttribute('width', parent.parent.width);
        parent.setAttribute('x', -xmin/max*parent.width);
        parent.setAttribute('unstretchedheight', max);
        parent.setAttribute('height', parent.parent.height);
        parent.setAttribute('y', -ymin/max*parent.height);
      ]]></method>
      
      <method name="resetBounds">
        var xmin = this.xmin;
        this.xmin = 'reset';
        this.setBounds(xmin, this.ymin, this.xmax, this.ymax);
      </method>
      
      <method name="endFrame">
        if (this.inPath) {
          this.fill();
          this.inPath = false;
        }
      </method>
      
      <method name="drawPath" args="pts"><![CDATA[
        if (this.inPath && this.lastStyle != this.fillStyle) {
          this.fill();
          this.inPath = false;
        }
        if (!this.inPath) {
          this.beginPath();
          this.lastStyle = this.fillStyle;
          this.inPath = true;
        }
        var x = pts[0][0];
        var y = pts[0][1];
        var xmin = Math.min(x, this.xmin);
        var ymin = Math.min(y, this.ymin);
        var xmax = Math.max(x, this.xmax);
        var ymax = Math.max(y, this.ymax);
        moveTo(x, y);
        for (var i = 1; i < pts.length; i++) {
          var x = pts[i][0], y = pts[i][1];
          this.lineTo(x, y);
          xmin = Math.min(xmin, x);
          ymin = Math.min(ymin, y);
          xmax = Math.max(xmax, x);
          ymax = Math.max(ymax, y);
        }
        this.endFrame();
        this.setBounds(xmin, ymin, xmax, ymax);
      ]]></method>
      
      <method name="drawCurve" args="pts"><![CDATA[
        if (this.inPath && this.lastStyle != this.fillStyle) {
          this.fill();
          this.inPath = false;
        }
        if (!this.inPath) {
          this.beginPath();
          this.lastStyle = this.fillStyle;
          this.inPath = true;
        }
        var x = pts[0][0];
        var y = pts[0][1];
        var xmin = Math.min(x, this.xmin);
        var ymin = Math.min(y, this.ymin);
        var xmax = Math.max(x, this.xmax);
        var ymax = Math.max(y, this.ymax);
        moveTo(x, y);
        for (var i = 1; i < pts.length; i+=2) {
          var cx = pts[i][0], cy = pts[i][1];
          var x = pts[i+1][0], y = pts[i+1][1];
          // Flash max is dyadic :-(
          xmin = Math.min(xmin, Math.min(cx, x));
          ymin = Math.min(ymin, Math.min(cy, y));
          xmax = Math.max(xmax, Math.max(cx, x));
          ymax = Math.max(ymax, Math.max(cy, y));
          this.quadraticCurveTo(cx, cy, x, y);
        }
        this.endFrame();
        this.setBounds(xmin, ymin, xmax, ymax);
      ]]></method>
    </drawview>
  </view>
</class>
